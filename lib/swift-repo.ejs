//
//  <%- prefix %><%- meta.objcModelName %>Repository.swift
//  <%- appName %>
//
//  Created by Technologies Generator Tools on <%- date %>.
//  Copyright Â© <%- year %> Arrive Technologies. All rights reserved.
//

import Foundation
import SwiftyJSON

class <%- prefix %><%- meta.objcModelName %>Repository: ALBaseModel {

  convenience required init() {
    self.init(className: "<%- meta.objcModelName %>", prefix: "<%- prefix %>", postfix: "<%- postfix %>")
    self.repository(with: "<%- meta.pluralName %>")
  }

  func modelWithJson(data:JSON) -> <%- prefix %><%- meta.objcModelName %><%- postfix %> {
      return <%- prefix %><%- meta.objcModelName %><%- postfix %>(data: data)
  }

  <% meta.moreInclude.forEach(function(model) {
    %>
    func model<%- model %>WithJson(data:JSON) -> <%- prefix %><%- model %><%- postfix %> {
      return <%- prefix %><%- model %><%- postfix %>(data: data)
    }
    <%
       });
    -%>

  override func contract() -> ALRESTContract? {
    let contract: ALRESTContract? = super.contract()
    <% meta.methods.forEach(function (method) {
      if (method.objcGenerated) {
    -%>
    contract?.add(ALRESTContractItem(pattern: "/\(className)/<%- method.routes[0].path %>",
      verb: "<%- method.routes[0].verb.toUpperCase() %>"), forMethod: "\(className).<%- method.name %>")
  <%   }
    });
 -%>
    return contract
  }

}
